load('ex7data2.mat');
K = 3; % 3 Centroids
initial_centroids = [3 3; 6 2; 8 5];
idx = findClosestCentroids(X, initial_centroids);

% findClosestCentroids
centroids = initial_centroids;
K = size(centroids, 1);
idx = zeros(size(X,1), 1);
distanceMat = zeros(size(X,1),K);

% computeCentroids
[m n] = size(X);

1) add index to first column of X
combined = [idx X];

2) iterate 1:K
filtered = combined( (combined(:,1) == 1), : );
filtered = combined( (combined(:,1) == 1), 2:end );

for i = 1:K
	centroids(i,:) = mean(combined( (combined(:,1) == i), 2:end ));
end

%%%%%%% reshaping image....

A = double(imread('bird_small.png'));
A = A / 255; % Divide by 255 so that all values are in the range 0 - 1
img_size = size(A);
X = reshape(A, img_size(1) * img_size(2), 3);
K = 16;
max_iters = 10;
initial_centroids = kMeansInitCentroids(X, K);
[centroids, idx] = runkMeans(X, initial_centroids, max_iters, true);

%%%%%%%%%%%%%%%%%%%%%%%%




load ('ex7data1.mat');
[X_norm, mu, sigma] = featureNormalize(X);
[U, S] = pca(X_norm);
K = 1;
Z = projectData(X_norm, U, K);
X_rec  = recoverData(Z, U, K);

%%%%%%%%%% pca

Sigma = (X'*X) / m
[U, S, V] = svd(Sigma)

%%%%%%%%%%%%% projectData

K=1;
U_reduce = U(:,1:K);
Z = U_reduce' * X';

