%########### script outline
input_layer_size  = 400;  % 20x20 Input Images of Digits
num_labels = 10;       
load('ex3data1.mat'); % training data stored in arrays X, y
m = size(X, 1);
%rand_indices = randperm(m);
%sel = X(rand_indices(1:100), :);
lambda = 0.1;
[all_theta] = oneVsAll(X, y, num_labels, lambda);
pred = predictOneVsAll(all_theta, X);
%############

%########### predictOneVsAll notes:
x_new = [ones(size(X,1), 1) X];

% results in 10x5000 matrix:
%y_hat = sigmoid(all_theta*x_new');

% 5000x10:
y_hat = sigmoid(x_new*all_theta');

%p = round(max(y_hat, [], 2));
[val, p] = max(y_hat, [], 2)

%p( p==10 ) = 0; 
mean(double(p==y))*100;
%############


%########## neural network script:
input_layer_size  = 400; 
hidden_layer_size = 25; 
num_labels = 10; 
load('ex3data1.mat');
load('ex3weights.mat');
pred = predict(Theta1, Theta2, X);
%#########


%######## predict function:

x_new = [ones(size(X,1), 1) X];
a2 = sigmoid(x_new*Theta1');
new_a2 = [ones(size(a2,1), 1) a2];
a3 = sigmoid(new_a2*Theta2');
[val, p] = max(a3, [], 2);


%#############


load('ex3weights.mat');








lrCostFunction([0.25 0.5 -0.5]', X, y, 0.1);
data = load('ex2data2.txt');
X = data(:, [1, 2]); y = data(:, 3);
X = mapFeature(X(:,1), X(:,2));
initial_theta = zeros(size(X, 2), 1);
lambda = 1;
[cost, grad] = lrCostFunction(initial_theta, X, y, lambda);



