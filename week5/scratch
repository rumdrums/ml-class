%#### ex4.m #####
input_layer_size  = 400;  % 20x20 Input Images of Digits
hidden_layer_size = 25;   % 25 hidden units
num_labels = 10; 

load('ex4data1.mat');
m = size(X, 1);

load('ex4weights.mat');
nn_params = [Theta1(:) ; Theta2(:)];
lambda = 0;

%J = nnCostFunction(nn_params, input_layer_size, hidden_layer_size, ...
                   num_labels, X, y, lambda);

lambda = 1;
%J = nnCostFunction(nn_params, input_layer_size, hidden_layer_size, ...
                   num_labels, X, y, lambda);

%##########

%#### nnCostFunction #######
Theta1 = reshape(nn_params(1:hidden_layer_size * (input_layer_size + 1)), ...
                 hidden_layer_size, (input_layer_size + 1));

Theta2 = reshape(nn_params((1 + (hidden_layer_size * (input_layer_size + 1))):end), ...
                 num_labels, (hidden_layer_size + 1));

m = size(X, 1);

J = 0;
Theta1_grad = zeros(size(Theta1));
Theta2_grad = zeros(size(Theta2));
a1 = [ones(size(X,1), 1) X];
z2 = a1 * Theta1';
a2 = sigmoid(z2);
a2 = [ones(size(a2,1), 1) a2];
z3 = a2 * Theta2';
a3 = sigmoid(z3);
h = a3;
for i = 1:size(y,1)
    new_y(i,y(i)) = 1;
end
y = new_y;

% regularization:
Theta1(:,1) = 0;
Theta2(:,1) = 0;
cost = (1/m) * sum(sum(( -y.*log(h) - (1-y).*log(1-h) )));
regularization = (lambda/2*m) * (sum(sum((Theta1.*Theta1))) + sum(sum((Theta2.*Theta2))));
J = cost + regularization;

%#################


%### backprop #######

delta1 = zeros(size(Theta1));
delta2 = zeros(size(Theta2));


Theta2_new=Theta2(:,2:end);

% backprop in a for loop:
for t = 1:m
    a1t = [1 X(t,:)];
    z2t = a1t * Theta1';
    a2t = sigmoid(z2t);
    a2t = [1 a2t ];
    z3t = a2t * Theta2';
    a3t = sigmoid(z3t);
    d3t = a3t - y(t,:);
    d2t = (d3t * Theta2_new) .* sigmoidGradient(z2t);
    delta2 = delta2 + d3t'*a2t;
    delta1 = delta1 + d2t'*a1t;
end;

Theta2_grad = delta2/m;
Theta1_grad = delta1/m;


%####################












